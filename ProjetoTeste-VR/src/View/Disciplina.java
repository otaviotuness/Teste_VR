/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.sql.SQLException;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ClassDisciplina;
import model.ClassProfessor;
import model.DisciplinaDAO;
import model.ProfessorDAO;

/**
 *
 * @author Otavio
 */
public class Disciplina extends javax.swing.JFrame {

    /**
     * Creates new form Diciplina 
     */
    public Disciplina() throws SQLException {
        initComponents();
        iniciar();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        edt_Descricao = new javax.swing.JTextField();
        edt_Ementa = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        edt_LimiteVaga = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cb_DiaSemana = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cb_Instrutor = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        edt_CargaHr = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabDisciplina = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        cb_Periodo = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(715, 454));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Descrição");

        edt_Descricao.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        edt_Ementa.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        edt_Ementa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edt_EmentaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Ementa");

        edt_LimiteVaga.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Limite vagas");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Dia semana");

        cb_DiaSemana.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cb_DiaSemana.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "SEGUNDA", "TERÇA", "QUARTA", "QUINTA", "SEXTA", "SABADO", "DOMINGO" }));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Instrutor");

        cb_Instrutor.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("Carga Hr.");

        edt_CargaHr.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        TabDisciplina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "CODIGO", "DESCRICAO", "EMENTA", "LIMITE_VAGA", "PROFESSOR", "DIA_SEMANA", "CARGA_HR", "PERIODO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabDisciplina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabDisciplinaMouseClicked(evt);
            }
        });
        TabDisciplina.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TabDisciplinaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(TabDisciplina);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setText("Periodo");

        cb_Periodo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cb_Periodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "Matutino", "Vespertino", "Noturno", "Integral" }));

        jButton1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/viewImagem/confirmar.png"))); // NOI18N
        jButton1.setText("Incluir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/viewImagem/alterar.png"))); // NOI18N
        jButton2.setText("Alterar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/viewImagem/excluir.png"))); // NOI18N
        jButton3.setText("Excluir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(jButton1)
                .addGap(39, 39, 39)
                .addComponent(jButton2)
                .addGap(43, 43, 43)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cb_Periodo, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cb_DiaSemana, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cb_Instrutor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(edt_Ementa, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(edt_LimiteVaga, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(edt_CargaHr, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(edt_Descricao))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(edt_Descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(edt_Ementa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edt_LimiteVaga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(edt_CargaHr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cb_DiaSemana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cb_Instrutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(cb_Periodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    public void refreshCombo() throws SQLException{
        
        DefaultComboBoxModel comboBoxModel = (DefaultComboBoxModel) cb_Instrutor.getModel();
        ProfessorDAO profdao = new ProfessorDAO();
        
        for (model.ClassProfessor clsprof : profdao.read()){ 
            comboBoxModel.addElement(clsprof);    
        }
    }
    
    public void readTable() throws SQLException{
    
        DefaultTableModel modelo = (DefaultTableModel) TabDisciplina.getModel();
        DisciplinaDAO cdao = new DisciplinaDAO();
        modelo.setRowCount(0);
        
        for (model.ClassDisciplina clsdisci : cdao.read()) {
            
             modelo.addRow(new Object[]{
                clsdisci.getCodigo(),
                clsdisci.getDescricao(),
                clsdisci.getEmenta(),
                clsdisci.getLimite_vaga(),
                clsdisci.getProfessor(),
                clsdisci.getDia_semana(),
                clsdisci.getCarga_hr(),
                clsdisci.getPeriodo()
             }
             );   
        }
    }
    
    
    private void clean(){
        edt_Descricao.setText(null);
        edt_Ementa.setText(null);
        edt_LimiteVaga.setText(null);
        cb_Periodo.setSelectedIndex(0);
        cb_Instrutor.setSelectedIndex(0);
        cb_DiaSemana.setSelectedIndex(0);
        edt_CargaHr.setText(null);
    }
    
    private void charge(){
        String indexCB;
        Integer index;
        if (TabDisciplina.getSelectedRow() != -1){
            
            edt_Descricao.setText(TabDisciplina.getValueAt(TabDisciplina.getSelectedRow(), 1).toString());
            edt_Ementa.setText(TabDisciplina.getValueAt(TabDisciplina.getSelectedRow(), 2).toString());
            edt_LimiteVaga.setText(TabDisciplina.getValueAt(TabDisciplina.getSelectedRow(), 3).toString());
            
            indexCB = TabDisciplina.getValueAt(TabDisciplina.getSelectedRow(), 4).toString();
            cb_Instrutor.setSelectedIndex(((DefaultComboBoxModel)cb_DiaSemana.getModel()).getIndexOf(indexCB));
            
            indexCB = TabDisciplina.getValueAt(TabDisciplina.getSelectedRow(), 5).toString();
            cb_DiaSemana.setSelectedIndex(((DefaultComboBoxModel)cb_DiaSemana.getModel()).getIndexOf(indexCB));
            
            edt_CargaHr.setText(TabDisciplina.getValueAt(TabDisciplina.getSelectedRow(), 6).toString());
            
            indexCB = TabDisciplina.getValueAt(TabDisciplina.getSelectedRow(), 7).toString();
            cb_Periodo.setSelectedIndex(((DefaultComboBoxModel)cb_Periodo.getModel()).getIndexOf(indexCB));
        }
    }
    
    private void edt_EmentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edt_EmentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edt_EmentaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        verificaEdts();
      
        ClassDisciplina clsdisciplina = new ClassDisciplina();
        
        DisciplinaDAO discidao = new DisciplinaDAO();
        clsdisciplina.setDescricao(edt_Descricao.getText());
        clsdisciplina.setEmenta(edt_Ementa.getText());
        clsdisciplina.setLimite_vaga(Integer.parseInt(edt_LimiteVaga.getText()));
        
        ClassProfessor professor = (ClassProfessor) cb_Instrutor.getSelectedItem();
        
        int idProf = professor.getCodigo();
        
        clsdisciplina.setProfessor(idProf);
        clsdisciplina.setDia_semana(cb_DiaSemana.getSelectedItem()+"");
        clsdisciplina.setCarga_hr(Double.parseDouble(edt_CargaHr.getText()));
        clsdisciplina.setPeriodo(cb_Periodo.getSelectedItem()+"");
        
        try {
            discidao.create(clsdisciplina);
        } catch (SQLException ex) {
            Logger.getLogger(Curso.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            readTable();
        } catch (SQLException ex) {
            Logger.getLogger(Curso.class.getName()).log(Level.SEVERE, null, ex);
        }

        clean();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        verificaEdts();
        int id;
        
        if (TabDisciplina.getSelectedRow() != -1){
            
            ClassDisciplina clsdisc = new ClassDisciplina();
            DisciplinaDAO discidao = new DisciplinaDAO();
            clsdisc.setDescricao(edt_Descricao.getText());
            clsdisc.setEmenta(edt_Ementa.getText());
            clsdisc.setLimite_vaga(Integer.parseInt(edt_LimiteVaga.getText()));
            
            ClassProfessor professor = (ClassProfessor) cb_Instrutor.getSelectedItem();
        
            id = professor.getCodigo();
            
            clsdisc.setProfessor(id);
            clsdisc.setDia_semana(cb_DiaSemana.getSelectedItem()+"");
            clsdisc.setCarga_hr(Double.parseDouble(edt_CargaHr.getText()));
            clsdisc.setPeriodo(cb_Periodo.getSelectedItem()+"");

            clsdisc.setCodigo((int) TabDisciplina.getValueAt(TabDisciplina.getSelectedRow(), 0));
            try {
                discidao.update(clsdisc);
            } catch (SQLException ex) {
                Logger.getLogger(Curso.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                readTable();
            } catch (SQLException ex) {
                Logger.getLogger(Curso.class.getName()).log(Level.SEVERE, null, ex);
            }
            clean();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (TabDisciplina.getSelectedRow() != -1){

            ClassDisciplina clsdisci = new ClassDisciplina();
            DisciplinaDAO dao = new DisciplinaDAO();
            clsdisci.setCodigo((int) TabDisciplina.getValueAt(TabDisciplina.getSelectedRow(), 0));
            try {
                dao.delete(clsdisci);
            } catch (SQLException ex) {
                Logger.getLogger(Curso.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                readTable();
            } catch (SQLException ex) {
                Logger.getLogger(Curso.class.getName()).log(Level.SEVERE, null, ex);
            }
            clean();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void TabDisciplinaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabDisciplinaMouseClicked
        // TODO add your handling code here:
        charge();
    }//GEN-LAST:event_TabDisciplinaMouseClicked

    private void TabDisciplinaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TabDisciplinaKeyReleased
        // TODO add your handling code here:
        charge();
    }//GEN-LAST:event_TabDisciplinaKeyReleased
   
    private void iniciar() throws SQLException{
        readTable();
        refreshCombo();
    }
    
    private void verificaEdts(){
        
        if (edt_CargaHr.getText()==null){
            JOptionPane.showMessageDialog(null, "Favor informar a carga horária");
            return;
        }else if(edt_Descricao.getText()==null){
            JOptionPane.showMessageDialog(null, "Favor informar a descrção");
            return;
        }else if(edt_Ementa.getText()==null){
            JOptionPane.showMessageDialog(null, "Favor informar a ementa");
            return;
        }else if(edt_LimiteVaga.getText()==null){
            JOptionPane.showMessageDialog(null, "Favor informar o limite de vagas");
            return;
        }
        
        if ("--".equals(cb_Periodo.getSelectedItem()+"")){
          JOptionPane.showMessageDialog(null, "Favor informar o periodo da disciplina");
          return;
        }
        
        if ("--".equals(cb_DiaSemana.getSelectedItem()+"")){
          JOptionPane.showMessageDialog(null, "Favor informar o dia da semana da disciplina");
          return;
        }
        
        if (cb_Instrutor.getSelectedIndex() == -1){
            JOptionPane.showMessageDialog(null, "Favor informar o professor responsável");
          return;
        }
    }

    public JComboBox<String> getCb_Instrutor() {
        return cb_Instrutor;
    }

    public void setCb_Instrutor(JComboBox<String> cb_Instrutor) {
        this.cb_Instrutor = cb_Instrutor;
    }
    
   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Disciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Disciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Disciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Disciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Disciplina().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Disciplina.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabDisciplina;
    private javax.swing.JComboBox<String> cb_DiaSemana;
    private javax.swing.JComboBox<String> cb_Instrutor;
    private javax.swing.JComboBox<String> cb_Periodo;
    private javax.swing.JTextField edt_CargaHr;
    private javax.swing.JTextField edt_Descricao;
    private javax.swing.JTextField edt_Ementa;
    private javax.swing.JTextField edt_LimiteVaga;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

