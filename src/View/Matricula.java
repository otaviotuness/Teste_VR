/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ClassCurso;
import model.ClassMatricula;
import model.ClassProfessor;
import model.CursoDAO;
import model.DisciplinaDAO;
import model.MatriculaDAO;

/**
 *
 * @author Otavio
 */
public class Matricula extends javax.swing.JFrame {

    /**
     * Creates new form Matricula
     */
    public Matricula() throws SQLException {
        initComponents();
        iniciar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TabNotLinked = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnExlLinked = new javax.swing.JButton();
        btnAddNotLinked = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TabLinked = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabCurso = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TabNotLinked.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "CODIGO", "DESCRICAO", "LIMITE_VAGA", "DIA_SEMANA", "CARGA_HR", "PERIODO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TabNotLinked);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Cursos");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Disciplinas não vinculadas");

        btnExlLinked.setText("Excluir");
        btnExlLinked.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExlLinkedActionPerformed(evt);
            }
        });

        btnAddNotLinked.setText("Adicionar");
        btnAddNotLinked.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNotLinkedActionPerformed(evt);
            }
        });

        TabLinked.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "CODIGO", "DESCRICAO", "LIMITE_VAGA", "DIA_SEMANA", "CARGA_HR", "PERIODO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TabLinked);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Disciplinas vinculadas");

        TabCurso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "DESCRICAO", "DURACAO", "QTD_ALUNO", "CARGA_HR", "PERIODO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabCurso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabCursoMouseClicked(evt);
            }
        });
        TabCurso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TabCursoKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(TabCurso);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnExlLinked, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 996, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnAddNotLinked))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 997, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnExlLinked)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAddNotLinked)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddNotLinkedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNotLinkedActionPerformed
        // TODO add your handling code here:
        Double CargaHrCurso;
        Double CargaHrDisciplina;
        
        CargaHrCurso = Double.parseDouble(TabCurso.getValueAt(TabCurso.getSelectedRow(), 4).toString());
        CargaHrDisciplina = Double.parseDouble(TabNotLinked.getValueAt(TabNotLinked.getSelectedRow(), 4).toString());
        
        if (CargaHrDisciplina > CargaHrCurso){
            JOptionPane.showMessageDialog(null, "Carga horaria da disciplina é maior que a do curso desejado");
            return;
        }
        
        ClassMatricula clsmatricula = new ClassMatricula();
        MatriculaDAO dao = new MatriculaDAO();
        clsmatricula.setCurso_id((int) TabCurso.getValueAt(TabCurso.getSelectedRow(), 0));
        clsmatricula.setDisciplina_id(Integer.parseInt(TabNotLinked.getValueAt(TabNotLinked.getSelectedRow(), 0).toString()));
        clsmatricula.setDia_semana(TabNotLinked.getValueAt(TabNotLinked.getSelectedRow(), 3).toString());
        clsmatricula.setPeriodo(TabNotLinked.getValueAt(TabNotLinked.getSelectedRow(), 5).toString());
        
        try {
            dao.create(clsmatricula);
        } catch (SQLException ex) {
            Logger.getLogger(Curso.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            readTableB();
        } catch (SQLException ex) {
            Logger.getLogger(Curso.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_btnAddNotLinkedActionPerformed

    private void TabCursoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabCursoMouseClicked
        try {
            // TODO add your handling code here:
            readTableA();
        } catch (SQLException ex) {
            Logger.getLogger(Matricula.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            readTableB();
        } catch (SQLException ex) {
            Logger.getLogger(Matricula.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TabCursoMouseClicked

    private void TabCursoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TabCursoKeyReleased
        try {
            // TODO add your handling code here:
            readTableA();
        } catch (SQLException ex) {
            Logger.getLogger(Matricula.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            readTableB();
        } catch (SQLException ex) {
            Logger.getLogger(Matricula.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TabCursoKeyReleased

    private void btnExlLinkedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExlLinkedActionPerformed
        // TODO add your handling code here:
        ClassMatricula clsmatricula = new ClassMatricula();
        MatriculaDAO dao = new MatriculaDAO();
        clsmatricula.setCurso_id((int) TabCurso.getValueAt(TabCurso.getSelectedRow(), 0));
        clsmatricula.setDisciplina_id(Integer.parseInt(TabLinked.getValueAt(TabLinked.getSelectedRow(), 0).toString()));
        
        try {
            dao.delete(clsmatricula);
        } catch (SQLException ex) {
            Logger.getLogger(Curso.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            readTableB();
        } catch (SQLException ex) {
            Logger.getLogger(Curso.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_btnExlLinkedActionPerformed
    
    private void iniciar() throws SQLException{
        readTableCurso();
    }
    
    public void readTableA() throws SQLException{
    
        DefaultTableModel modelo = (DefaultTableModel) TabLinked.getModel();
        DisciplinaDAO cdao = new DisciplinaDAO();
        modelo.setRowCount(0);
        
        for (model.ClassDisciplina clsdisci : cdao.readTabLinked((int) TabCurso.getValueAt(TabCurso.getSelectedRow(), 0))) {
            
             modelo.addRow(new Object[]{
                clsdisci.getCodigo(),
                clsdisci.getDescricao(),
                clsdisci.getLimite_vaga(),
                clsdisci.getDia_semana(),
                clsdisci.getCarga_hr(),
                clsdisci.getPeriodo()
             }
             );   
        }
    }
    
    public void readTableB() throws SQLException{
    
        DefaultTableModel modelo = (DefaultTableModel) TabNotLinked.getModel();
        DisciplinaDAO cdao = new DisciplinaDAO();
        modelo.setRowCount(0);
        
        for (model.ClassDisciplina clsdisci : cdao.readTabNotLinked((int) TabCurso.getValueAt(TabCurso.getSelectedRow(), 0))) {
            
             modelo.addRow(new Object[]{
                clsdisci.getCodigo(),
                clsdisci.getDescricao(),
                clsdisci.getLimite_vaga(),
                clsdisci.getDia_semana(),
                clsdisci.getCarga_hr(),
                clsdisci.getPeriodo()
             }
             );   
        }
    }
    
    public void readTableCurso() throws SQLException{
    
        DefaultTableModel modelo = (DefaultTableModel) TabCurso.getModel();
        CursoDAO cursodao = new CursoDAO();
        modelo.setRowCount(0);
        
        for (ClassCurso c : cursodao.read()) {
            
             modelo.addRow(new Object[]{
                c.getCodigo(),
                c.getDescricao(),
                c.getDuracao(),
                c.getQtd_aluno(),
                c.getCarga_hr(),
                c.getPeriodo()
             }
             );   
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Matricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Matricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Matricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Matricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Matricula().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Matricula.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabCurso;
    private javax.swing.JTable TabLinked;
    private javax.swing.JTable TabNotLinked;
    private javax.swing.JButton btnAddNotLinked;
    private javax.swing.JButton btnExlLinked;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
